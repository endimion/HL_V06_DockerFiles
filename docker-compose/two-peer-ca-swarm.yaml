version: '3'
services:
  # baseimage:
  #   build: ./baseimage
  #   image: hyperledger/fabric-baseimage:latest
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #     restart_policy:
  #         condition: none
  membersrvc:
    image: ibmblockchain/fabric-membersrvc:${ARCH_TAG}
    ports:
      - "7054:7054"
    command: membersrvc
    environment:
      - MEMBERSRVC_CA_LOGGING_SERVER=INFO
      - MEMBERSRVC_CA_LOGGING_CA=INFO
      - MEMBERSRVC_CA_LOGGING_ECA=INFO
      - MEMBERSRVC_CA_LOGGING_ECAP=INFO
      - MEMBERSRVC_CA_LOGGING_ECAA=INFO
      - MEMBERSRVC_CA_LOGGING_ACA=INFO
      - MEMBERSRVC_CA_LOGGING_ACAP=INFO
      - MEMBERSRVC_CA_LOGGING_TCA=INFO
      - MEMBERSRVC_CA_LOGGING_TCAP=INFO
      - MEMBERSRVC_CA_LOGGING_TCAA=INFO
      - MEMBERSRVC_CA_LOGGING_TLSCA=INFO
      - MEMBERSRVC_CA_ACA_ENABLED=true
    # networks:
    #   #- default
    #   - bridge
    deploy:
      mode: replicated
      replicas: 1
      placement:
       constraints: [node.role == worker]
      restart_policy:
          condition: on-failure


  membersrvc0:
    image: ibmblockchain/fabric-membersrvc:${ARCH_TAG}
    ports:
      - "8054:7054"
    command: membersrvc
    environment:
      - MEMBERSRVC_CA_LOGGING_SERVER=INFO
      - MEMBERSRVC_CA_LOGGING_CA=INFO
      - MEMBERSRVC_CA_LOGGING_ECA=INFO
      - MEMBERSRVC_CA_LOGGING_ECAP=INFO
      - MEMBERSRVC_CA_LOGGING_ECAA=INFO
      - MEMBERSRVC_CA_LOGGING_ACA=INFO
      - MEMBERSRVC_CA_LOGGING_ACAP=INFO
      - MEMBERSRVC_CA_LOGGING_TCA=INFO
      - MEMBERSRVC_CA_LOGGING_TCAP=INFO
      - MEMBERSRVC_CA_LOGGING_TCAA=INFO
      - MEMBERSRVC_CA_LOGGING_TLSCA=INFO
      - MEMBERSRVC_CA_ACA_ENABLED=true
    # networks:
    #   #- default
    #   - bridge
    deploy:
      mode: replicated
      replicas: 1
      placement:
       constraints: [node.role == manager]
      restart_policy:
          condition: on-failure



  vp0:
    image: ibmblockchain/fabric-peer:${ARCH_TAG}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - CORE_PEER_DISCOVERY_PERIOD=240s
      - CORE_PEER_DISCOVERY_TOUCHPERIOD=240s
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_VM_ENDPOINT=unix:///var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_PKI_ECA_PADDR=membersrvc0:7054
      - CORE_PEER_PKI_TCA_PADDR=membersrvc0:7054
      - CORE_PEER_PKI_TLSCA_PADDR=membersrvc0:7054
      - CORE_SECURITY_ENABLED=true
      # - CORE_PEER_VALIDATOR_CONSENSUS_PLUGIN=pbft
      # - CORE_PBFT_GENERAL_MODE=batch
      # - CORE_PBFT_GENERAL_N=2
      - CORE_SECURITY_ATTRIBUTES_ENABLED=true
      - CORE_PEER_ID=vp0
      - CORE_SECURITY_ENROLLID=test_vp0
      - CORE_SECURITY_ENROLLSECRET=MwYpmSRjupbT
    command: sh -c "sleep 60; peer node start"
    ports:
      - "7050:7050"
      - "7051:7051"
      - "7053:7053"
    depends_on:
      - membersrvc0
    # networks:
    #   #- default
    #   - bridge
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
          condition: on-failure

  vp1:
    image: ibmblockchain/fabric-peer:${ARCH_TAG}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - CORE_PEER_DISCOVERY_PERIOD=240s
      - CORE_PEER_DISCOVERY_TOUCHPERIOD=240s
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_VM_ENDPOINT=unix:///var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_PKI_ECA_PADDR=membersrvc:7054
      - CORE_PEER_PKI_TCA_PADDR=membersrvc:7054
      - CORE_PEER_PKI_TLSCA_PADDR=membersrvc:7054
      - CORE_SECURITY_ENABLED=true
      # - CORE_PEER_VALIDATOR_CONSENSUS_PLUGIN=pbft
      # - CORE_PBFT_GENERAL_MODE=batch
      # - CORE_PBFT_GENERAL_N=2
      - CORE_SECURITY_ATTRIBUTES_ENABLED=true
      - CORE_PEER_DISCOVERY_ROOTNODE=vp0:7051
      - CORE_PEER_ID=vp1
      - CORE_SECURITY_ENROLLID=test_vp1
      - CORE_SECURITY_ENROLLSECRET=5wgHK9qqYaPy
    command: sh -c "sleep 60; peer node start"
    ports:
      - "8050:7050"
      - "8051:7051"
      - "8053:7053"
    depends_on:
      - membersrvc
      - vp0
    # networks:
    #   #- default
    #   - bridge
    deploy:
      mode: replicated
      replicas: 1
      placement:
       constraints: [node.role == worker]
      restart_policy:
          condition: on-failure

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == worker]
#     networks:
#       - bridge
#
#
#
#
# networks:
#   bridge:
#     external:
#       name: bridge
